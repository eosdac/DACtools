keys=`
EOS5C5ZwtkorPABzdVdak9nUC2Yiv5avEDhfMJWob1c5aAoYauNeT
EOS5j5flJtrC7xhVao32uBQHNRmL2zEzQ5doagtcbXa5wUXSH5i8t
EOS5nJW7FJLf2WsJczbGKpjRaXL8duLuJetqpNYmRsErXb1jMovg
EOS5QKmoaT4ZAMMkSQ6D5emxuepmVu9vqkhmgpbimya8ugfwqsa83
EOS6MJgHyY5iHVup6HLKW8chcyTNoF68smqcb6sxuylgz371jucyk
EOS6PQqFJY4SSLTfpBbimnu7PWx7GcWMM6WMr8NgUF8X1Td35Ye7
EOS6u3dPDszwmAh6yA2Vpmb53iwXFHm9kPegyuWgqWeqpfPd3bLAd
EOS6uhBkbemFHEPtMca2GHwxd3AX87kCsB6jc2z8EdJ5h5eexs399
EOS77AVQRka7uak2TvpNj6bVj4B1w6KtRJ6py7zjhEbxqziD8QTsR
EOS79ks4GamfiPDP8ES7QGjyqX2HEsCT93uient78ytbfharfzeb5
EOS7bekCU2iQaHQUHCx4e9VXDUWBT9vgyrvpgwgg9dr85pvefmgrj
EOS7gAPWhvXHmgkHPe6yWZPgP2qvND4kQReZupMYgrDHSydYXtekY
EOS7MMmbqoeAoYSThKR6R7eoQi9n91vhC1N35jKtXiUGiXnTYDd
EOS7UGFe5VfCCT11hVay1LLY7zTh8zc2weEamv7BvVqQxaDF6VRwZ
EOS7wSuGunkXEnHRYW4iZN6RZudU9mqSk1ZvtL2ueXqDDapHvgCBU
EOS7xv9jRfzwQcix7BUP7mAYgfxvK8Jnpynzeeacwegxj822udwdt
EOS7yWJX7ELuJV9yy5X6s6YDN8XG8kMAF4hQpA5mnzTyrmjRHdd1N
EOS7z4kP9RgrmCPrkm6bHhGE1QVq4KoNjGqMsNtNkZU6wbf2222y
EOS7zXqFuvswBaZ1WxqstgMma4Pommj1XdPoFCRRSka4iv1FXP
EOS86z9YbjViiP2Kaj8MRQjmwDX6SdYwK8bEcwuWr7cqjwtKYiC5u
EOS89G8C7CXmw4JYGvQKnrrBygXQKhLS9gT2bXFwySTSGN1TyrP5V
EOS8D2rPVru57mvyxpfno8KedSSRJSwzcp5QfqGoBbtoCyWQdYuZ
EOS8eAtRdY23oANiqGd44f841tokxTwrYEVKxhEXHD5rxuAzafBED
`.trim().split('\n')


ecc=require('./src')

let pubkeyCheckBits, fixkeyCheckBits, fixkey, pubkeyCheck, fixkeyCheck

function check(pubkey) {
pubkeyCheck = require('bs58').decode(pubkey.substring(3)).slice(-4)
pubkeyData = require('bs58').decode(pubkey.substring(3)).slice(0,-4)

fixkey = ecc.PublicKey.fromBuffer(pubkeyData).toString()
fixkeyCheck = require('bs58').decode(fixkey.substring(3)).slice(-4)
fixkeyData = require('bs58').decode(fixkey.substring(3)).slice(0,-4)

function pad(t) { while(t.length < 32) { t = '0' + t }; return t}
pubkeyCheckBits = pad(parseInt(pubkeyCheck.toString('hex'), 16).toString(2))
fixkeyCheckBits = pad(parseInt(fixkeyCheck.toString('hex'), 16).toString(2))
}

for(key of keys) {
try {
check(key)
console.log(key, '\t', pubkeyCheckBits, '\t',  pubkeyCheck, '\t', 'checksum invalid')
console.log(fixkey, '\t', fixkeyCheckBits, '\t', fixkeyCheck, '\t', 'checksum guess')
} catch(error) {
console.log(key, '\t', error.message)
}
console.log()
}


